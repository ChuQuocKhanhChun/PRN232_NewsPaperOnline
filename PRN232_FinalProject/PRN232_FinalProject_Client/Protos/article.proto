syntax = "proto3";

option csharp_namespace = "GrpcArticleService";

service ArticleService {
  rpc CreateArticle (CreateArticleRequest) returns (ArticleResponse);
  rpc UpdateArticle (UpdateArticleRequest) returns (ArticleResponse);
  rpc DeleteArticle (DeleteArticleRequest) returns (DeleteArticleResult);
  rpc GetAllArticles (Empty) returns (ArticleList); // <-- THÊM DÒNG NÀY
  rpc GetArticleById (DeleteArticleRequest) returns (ArticleResponse); // <-- THÊM DÒNG NÀY
  rpc GetAllCategories (Empty) returns (CategoryList);
  rpc GetAllTags (Empty) returns (TagList); 
  rpc GetPendingArticles (Empty) returns (ArticleList); // Lấy các bài cần phê duyệt (Status = "Draft")
  rpc PublishArticle (PublishArticleRequest) returns (PublishArticleResponse); // Chuyển trạng thái bài báo thành Published
  rpc RemoveArticle (RemoveArticleRequest) returns (RemoveArticleResponse); // Gỡ bài báo (IsDeleted = true)
   rpc RestoreArticle (RestoreArticleRequest) returns (RestoreArticleResponse);
   rpc GetAllArticlesForAdmin (Empty) returns (ArticleList);
   rpc GetMostViewedArticles (MostViewedArticlesRequest) returns (MostViewedArticlesResponse);
  rpc GetTotalArticleViews (TotalArticleViewsRequest) returns (TotalArticleViewsResponse);
  rpc GetMostLikedArticles (MostLikedArticlesRequest) returns (MostLikedArticlesResponse);
  rpc UpdateArticleLikesCount (UpdateArticleLikesCountRequest) returns (ArticleResponse);
}
// Yêu cầu lấy bài viết được like nhiều nhất
message MostLikedArticlesRequest {
  string startDate = 1; // Định dạng YYYY-MM-DD (tùy chọn lọc theo ngày)
  string endDate = 2;   // Định dạng YYYY-MM-DD (tùy chọn lọc theo ngày)
  int32 limit = 3;      // Giới hạn số lượng bài viết trả về
}

// Model cho bài viết được like nhiều nhất (tương tự MostViewedArticleModel nhưng có LikesCount)
message MostLikedArticleModel {
  string articleId = 1;
  string title = 2;
  string author = 3;
  int32 likesCount = 4; // Lượt Like
  string publishedDate = 5;
}

// Phản hồi cho yêu cầu lấy bài viết được like nhiều nhất
message MostLikedArticlesResponse {
  repeated MostLikedArticleModel articles = 1;
}

// Yêu cầu cập nhật lượt like (ví dụ: +1 khi like, -1 khi unlike)
message UpdateArticleLikesCountRequest {
  string articleId = 1;
  int32 changeBy = 2; // Số lượng thay đổi (ví dụ: 1 hoặc -1)
}
message MostViewedArticlesRequest {
  string startDate = 1; // Định dạng YYYY-MM-DD
  string endDate = 2;   // Định dạng YYYY-MM-DD
  int32 limit = 3;      // Giới hạn số lượng bài viết trả về
}

message MostViewedArticleModel {
  string articleId = 1;
  string title = 2;
  string author = 3; // Thêm tên tác giả để hiển thị đẹp hơn
  int32 viewCount = 4;
  string publishedDate = 5; // Ngày xuất bản
}

message MostViewedArticlesResponse {
  repeated MostViewedArticleModel articles = 1;
}

message TotalArticleViewsRequest {
  string startDate = 1; // Định dạng YYYY-MM-DD
  string endDate = 2;   // Định dạng YYYY-MM-DD
}

message TotalArticleViewsResponse {
  int32 totalViews = 1;
}
// MỚI/XÁC NHẬN: Message cho yêu cầu khôi phục bài báo
message RestoreArticleRequest {
  string articleId = 1;
}

// MỚI/XÁC NHẬN: Message cho phản hồi khôi phục bài báo
message RestoreArticleResponse {
  bool success = 1;
  string message = 2;
}
message PublishArticleRequest {
  string articleId = 1;
}

message PublishArticleResponse {
  bool success = 1;
  string message = 2; // Ví dụ: "Bài báo đã được xuất bản."
}

message RemoveArticleRequest {
  string articleId = 1;
}

message RemoveArticleResponse {
  bool success = 1;
  string message = 2; // Ví dụ: "Bài báo đã được gỡ."
}

message GetArticleByIdRequest {
  string id = 1; // Chỉ cần trường 'id' là đủ
}
message CreateArticleRequest {
  string title = 1;
  string content = 2;
  string authorId = 3;
  string imageUrl = 4;
  int32 categoryId = 5; // <-- THÊM DÒNG NÀY
  repeated string tags = 6; // <-- THÊM DÒNG NÀY
}

message UpdateArticleRequest {
  string id = 1;
  string title = 2;
  string content = 3;
  string imageUrl = 4;
  int32 categoryId = 5; // <-- THÊM DÒNG NÀY
  repeated string tags = 6; // <-- THÊM DÒNG NÀY
}

message DeleteArticleRequest {
  string id = 1;
}

message ArticleResponse {
  string id = 1;
  string title = 2;
  string content = 3;
  string authorId = 4;
  string createdAt = 5;
  string imageUrl = 6;
  int32 categoryId = 7; 
  string categoryName = 8; 
  repeated string tags = 9;
  string publishedDate = 10;
  string status = 11; // THÊM TRƯỜNG NÀY
  bool isDeleted = 12; // THÊM TRƯỜNG NÀY
  string authorName = 13; // THÊM TRƯỜNG NÀY
}

message DeleteArticleResult {
  bool success = 1;
}
message ArticleList { // <-- THÊM MESSAGE NÀY
  repeated ArticleResponse articles = 1;
}
message CategoryResponse {
  int32 id = 1;
  string name = 2;
}
message CategoryList {
  repeated CategoryResponse categories = 1;
}
message TagResponse { // <-- THÊM MESSAGE NÀY
  int32 id = 1;
  string name = 2;
}

message TagList { // <-- THÊM MESSAGE NÀY
  repeated TagResponse tags = 1;
}
message Empty {} 
